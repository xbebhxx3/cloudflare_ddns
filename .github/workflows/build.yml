name: Build and Package cf_ddns

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux targets
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            arch: x86_64
            suffix: ""

          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            arch: x86
            suffix: ""

          - os: ubuntu-latest
            target: aarch64-linux-gnu
            arch: aarch64
            suffix: ""

          - os: ubuntu-latest
            target: arm-linux-gnueabihf
            arch: armv7
            suffix: ""

          # Windows targets
          - os: windows-latest
            target: x86_64-w64-mingw32
            arch: x86_64
            suffix: .exe

          - os: windows-latest
            target: i686-w64-mingw32
            arch: x86
            suffix: .exe

    name: Build for ${{ matrix.os }} (${{ matrix.arch }})
    steps:
      - uses: actions/checkout@v4

      - name: Set up dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y g++ curl make zip libcurl4-openssl-dev gcc-${{ matrix.arch }}-linux-gnu g++-${{ matrix.arch }}-linux-gnu

      - name: Set up dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install -y zip
          vcpkg install curl

      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: |
          make CXX=${{ matrix.target }}-g++

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: |
          $env:INCLUDE="C:\vcpkg\installed\${{ matrix.arch }}-windows\include"
          $env:LIB="C:\vcpkg\installed\${{ matrix.arch }}-windows\lib"
          g++ -std=c++17 main.cpp -I"$env:INCLUDE" -L"$env:LIB" -lcurl -o cf_ddns${{ matrix.suffix }}

      - name: Prepare release artifacts
        run: |
          mkdir -p release
          cp cf_ddns${{ matrix.suffix }} release/
          cp config.json release/
          zip -r cf_ddns_${{ runner.os }}_${{ matrix.arch }}.zip release

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cf_ddns-${{ matrix.os }}-${{ matrix.arch }}
          path: cf_ddns_${{ runner.os }}_${{ matrix.arch }}.zip
