name: Build and Package cf_ddns

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: x86_64
            image: dockcross/linux-x64
            ext: ""
          - os: linux
            arch: x86
            image: dockcross/linux-x86
            ext: ""
          - os: linux
            arch: armv7
            image: dockcross/linux-armv7
            ext: ""
          - os: linux
            arch: aarch64
            image: dockcross/linux-arm64
            ext: ""
          - os: windows
            arch: x86_64
            image: dockcross/windows-static-x64
            ext: ".exe"
          - os: windows
            arch: x86
            image: dockcross/windows-static-x86
            ext: ".exe"

    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dockcross image
        id: cache-dockcross
        uses: actions/cache@v4
        with:
          path: dockcross-${{ matrix.arch }}.tar
          key: dockcross-${{ matrix.image }}-v1

      - name: Pull and save dockcross image
        if: steps.cache-dockcross.outputs.cache-hit != 'true'
        run: |
          docker pull ${{ matrix.image }}
          docker save ${{ matrix.image }} -o dockcross-${{ matrix.arch }}.tar

      - name: Load dockcross image from cache
        run: |
          docker load -i dockcross-${{ matrix.arch }}.tar

      - name: Generate dockcross script
        run: |
          docker run --rm --privileged ${{ matrix.image }} > ./dockcross
          chmod +x ./dockcross

      - name: Download json.hpp if missing
        run: |
          [ -f json.hpp ] || curl -L -o json.hpp https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp

      - name: Build binary
        run: |
          ./dockcross bash -c "set -x; make CXX=\$CXX EXT=${{ matrix.ext }}"

      - name: Prepare package
        run: |
          mkdir -p out
          cp cf_ddns${{ matrix.ext }} out/cf_ddns-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          cp config.json out/
          cd out && zip cf_ddns-${{ matrix.os }}-${{ matrix.arch }}.zip *

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cf_ddns-${{ matrix.os }}-${{ matrix.arch }}
          path: out/cf_ddns-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/cf_ddns-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
